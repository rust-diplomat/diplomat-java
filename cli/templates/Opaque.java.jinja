package {{domain}}.{{lib_name}};

import {{domain}}.{{lib_name}}.ntv.*;


import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.SegmentAllocator;
import java.lang.ref.Cleaner;
import java.util.List;
import static java.lang.foreign.ValueLayout.*;
import java.nio.charset.StandardCharsets;
import java.util.stream.Stream;

public class {{type_name}} {

    MemorySegment internal;
    Cleaner.Cleanable cleanable;
    SegmentAllocator arena;

    List<Object> selfEdges = List.of();
    {% for edge in edges -%}
    List<Object> {{edge}}Edges = List.of();
    {% endfor %}

    static class {{type_name}}Cleaner implements Runnable {

        MemorySegment segment;
        {{type_name}}Cleaner(MemorySegment segment) {
            this.segment = segment;
        }

        public void run() {
            {{lib_name}}_h.{{type_name}}_destroy(this.segment);
        }
    }

    {{type_name}}() {}
    {{type_name}}(MemorySegment handle, List<Object> selfEdges 
    {%- for edge in edges -%}
    , List<Object> {{edge}}Edges
    {%- endfor -%}
    ) {
        this.internal = handle;
        this.selfEdges = selfEdges;
        {% for edge in edges -%}
        this.{{edge}}Edges = {{edge}}Edges;
        {% endfor %}

    }
    {% for method in static_methods %}
    {{method|indent(4)}}
    {% endfor %}
    {% for method in class_methods %}
    {{method|indent(4)}}
    {% endfor %}
}
